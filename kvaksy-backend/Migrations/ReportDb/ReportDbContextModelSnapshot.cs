// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kvaksy_backend.data.DbContexts;

#nullable disable

namespace kvaksy_backend.Migrations.ReportDb
{
    [DbContext(typeof(ReportDbContext))]
    partial class ReportDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("kvaksy_backend.data.models.ImageFieldUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageFieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageFieldId");

                    b.ToTable("ImageFieldUrl");
                });

            modelBuilder.Entity("kvaksy_backend.Data.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("kvaksy_backend.data.models.ReportFieldBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportFieldBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ReportFieldBase");
                });

            modelBuilder.Entity("kvaksy_backend.data.models.ReportFieldsConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ImageField")
                        .HasColumnType("bit");

                    b.Property<bool>("TemperatureField")
                        .HasColumnType("bit");

                    b.Property<bool>("WeightField")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ReportFieldsConfiguration");
                });

            modelBuilder.Entity("kvaksy_backend.data.models.ImageField", b =>
                {
                    b.HasBaseType("kvaksy_backend.data.models.ReportFieldBase");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ImageField");
                });

            modelBuilder.Entity("kvaksy_backend.data.models.TemperatureField", b =>
                {
                    b.HasBaseType("kvaksy_backend.data.models.ReportFieldBase");

                    b.Property<double?>("Temperature")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("TemperatureField");
                });

            modelBuilder.Entity("kvaksy_backend.data.models.WeightField", b =>
                {
                    b.HasBaseType("kvaksy_backend.data.models.ReportFieldBase");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("WeightField");
                });

            modelBuilder.Entity("kvaksy_backend.data.models.ImageFieldUrl", b =>
                {
                    b.HasOne("kvaksy_backend.data.models.ImageField", null)
                        .WithMany("Urls")
                        .HasForeignKey("ImageFieldId");
                });

            modelBuilder.Entity("kvaksy_backend.data.models.ReportFieldBase", b =>
                {
                    b.HasOne("kvaksy_backend.Data.Models.Report", null)
                        .WithMany("Fields")
                        .HasForeignKey("ReportId");
                });

            modelBuilder.Entity("kvaksy_backend.Data.Models.Report", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("kvaksy_backend.data.models.ImageField", b =>
                {
                    b.Navigation("Urls");
                });
#pragma warning restore 612, 618
        }
    }
}
